{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["data","post","markdownRemark","featuredImgFluid","frontmatter","featuredImage","childImageSharp","fluid","authorPic","title","className","loading","src","alt","author","date","timeToRead","dangerouslySetInnerHTML","__html","html","variant","container","spacing","css","allMarkdownRemark","edges","map","node","item","xs","sm","key","id","to","fields","slug","paragraph","style","margin","excerpt","color","tags","query"],"mappings":"gyBAce,sBAAa,IAAXA,EAAU,EAAVA,KAETC,EAAOD,EAAKE,eACdC,EAAmBF,EAAKG,YAAYC,cAAcC,gBAAgBC,MAClEC,EAAYP,EAAKG,YAAYI,UAAUF,gBAAgBC,MAE3D,OACE,YAAC,IAAD,KAEE,YAAC,SAAD,CAAQE,MAAK,gBAAkBR,EAAKG,YAAYK,QAChD,mBAAKC,UAAU,OACb,mBAAKA,UAAU,aACf,mBAAKA,UAAU,2BACb,mBAAKA,UAAU,WACb,YAAC,IAAD,CAAKH,MAAOJ,EAAkBQ,QAAQ,SACtC,mBAAKD,UAAU,oBACb,sBAAKT,EAAKG,YAAYK,OACtB,mBAAKC,UAAU,qBACb,mBAAKA,UAAU,iBACb,mBAAKE,IAAKJ,EAAUI,IAAKC,IAAKZ,EAAKG,YAAYU,OAAQJ,UAAU,iBAEnE,mBAAKA,UAAU,oBACb,oBAAMA,UAAU,iBAAiBT,EAAKG,YAAYU,QAClD,uBACE,oBAAMJ,UAAU,iBACbT,EAAKG,YAAYW,KADpB,MAC6Bd,EAAKe,WADlC,gBAMN,mBAAKC,wBAAyB,CAAEC,OAAQjB,EAAKkB,WAInD,mBAAKT,UAAU,cAGjB,YAAC,IAAD,CAAYU,QAAQ,SAApB,oBAGA,mBAAKV,UAAU,iBAEf,YAAC,IAAD,CAAMW,WAAS,EAACC,QAAS,EAC3BC,IAAG,GAIAvB,EAAKwB,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAEhC,YAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EACrBC,IAAKJ,EAAKK,GACVT,IAAG,GAKH,mBAAKb,UAAU,qBACb,mBACEa,IAAG,GAMH,YAAC,IAAD,CAAKhB,MAAOoB,EAAKvB,YAAYC,cAAcC,gBAAgBC,MAC3DgB,IAAG,KAOL,mBACAA,IAAG,GAOD,YAAC,IAAD,CACEU,GAAIN,EAAKO,OAAOC,KAChBZ,IAAG,GAIH,YAAC,IAAD,CAAYH,QAAQ,QACpBG,IAAG,GAGAI,EAAKvB,YAAYK,OAEpB,YAAC,IAAD,CAAY2B,WAAS,EAACC,MAAO,CAAEC,OAAQ,MACpCX,EAAKY,UAGV,mBAAK7B,UAAU,kBACb,YAAC,IAAD,CAAO8B,MAAM,WAAWb,EAAKvB,YAAYqC,OAE3C,oBAAM/B,UAAU,iBACbiB,EAAKvB,YAAYW,KADpB,MAC6BY,EAAKX,WADlC,uBAgBP,IAAM0B,EAAK","file":"component---src-templates-blog-post-js-464dc87e073783e3d43f.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from 'gatsby'\nimport { css } from '@emotion/core'\nimport { Badge } from 'reactstrap';\nimport { Helmet } from \"react-helmet\"\nimport Img from 'gatsby-image'\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport Layout from \"../components/layout\"\n\nimport '../styles/global.css'\n\nexport default ({data}) => {\n\n  const post = data.markdownRemark\n  let featuredImgFluid = post.frontmatter.featuredImage.childImageSharp.fluid\n  let authorPic = post.frontmatter.authorPic.childImageSharp.fluid\n\n  return (\n    <Layout>\n\n      <Helmet title={`MM Science | ${post.frontmatter.title}`} />\n      <div className=\"row\">\n        <div className=\"col-md-2\"></div>\n        <div className=\"col-md-8 singal_content\">\n          <div className=\"article\">\n            <Img fluid={featuredImgFluid} loading=\"lazy\" />\n            <div className=\"article__content\">\n              <h2>{post.frontmatter.title}</h2>\n              <div className=\"article_role_play\">\n                <div className=\"article_owner\">\n                  <img src={authorPic.src} alt={post.frontmatter.author} className=\"author__pic\"/>\n                </div>\n                <div className=\"article__profile\">\n                  <span className=\"article__name\">{post.frontmatter.author}</span>\n                  <div>\n                    <span className=\"article__meta\"> \n                      {post.frontmatter.date} · {post.timeToRead} min read \n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div dangerouslySetInnerHTML={{ __html: post.html }} />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-2\"></div>\n      </div>\n\n      <Typography variant=\"body2\">\n        Awesome articles\n      </Typography>\n      <div className=\"other_stories\">\n\n      <Grid container spacing={3} \n    css={css`\n      padding-top: 10px;\n    `}>\n        \n      {data.allMarkdownRemark.edges.map(({ node }) => (\n          \n        <Grid item xs={12} sm={4} \n          key={node.id} \n          css={css`\n            @media screen and (max-width: 700px) {\n              padding: 0 !important;\n            }            \n        `}>\n          <div className=\"blog__post__items\">\n            <div \n              css={css`\n                @media screen and (max-width: 700px) {\n                  padding: 10px;\n                }\n              `}\n            >\n              <Img fluid={node.frontmatter.featuredImage.childImageSharp.fluid} \n              css={css`\n                @media screen and (max-width: 700px) {\n                  box-shadow: none;\n                  border-radius: 20px;\n                }\n              `}/>\n            </div>\n            <div \n            css={css`\n              padding: 1rem 1rem;\n              background: #fff;\n              @media screen and (max-width: 700px) {\n                border-radius: 20px;\n              }\n            `}>\n              <Link\n                to={node.fields.slug}\n                css={css`\n                  text-decoration: none;\n                  color: inherit;\n              `}>\n                <Typography variant=\"body2\" \n                css={css`\n                  font-family: 'Rubik', 'Pyidaungsu', sans-serif;\n                `}> \n                  {node.frontmatter.title}\n                </Typography>\n                <Typography paragraph style={{ margin: '0'}}>\n                  {node.excerpt}\n                </Typography>\n              </Link>\n              <div className=\"article__label\"> \n                <Badge color=\"success\">{node.frontmatter.tags}</Badge>  \n              </div>\n              <span className=\"article__meta\"> \n                {node.frontmatter.date} · {node.timeToRead} min read \n              </span>\n            </div>\n          </div>\n        </Grid>\n         \n      ))}\n    </Grid>\n\n      </div>\n\n    </Layout>\n  )\n}\n\nexport const query = graphql `\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        author\n        authorPic {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        tags\n        date(formatString: \"MMM DD\")\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n              src\n            }\n          }\n        }\n      }\n      timeToRead\n    }\n    allMarkdownRemark(limit: 3, sort: {order: DESC, fields: frontmatter___tags}) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMM, YYYY\")\n            tags\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n        }\n      }\n    }\n  }\n`\n\n"],"sourceRoot":""}