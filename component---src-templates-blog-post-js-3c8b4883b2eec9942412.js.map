{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./node_modules/reactstrap/es/Badge.js"],"names":["data","post","markdownRemark","featuredImgFluid","frontmatter","featuredImage","childImageSharp","fluid","authorPic","style","marginTop","title","className","loading","src","alt","author","date","timeToRead","dangerouslySetInnerHTML","__html","html","variant","container","spacing","css","allMarkdownRemark","edges","map","node","item","xs","sm","key","id","to","fields","slug","paragraph","margin","excerpt","color","tags","query","propTypes","string","pill","bool","tag","innerRef","oneOfType","object","func","children","cssModule","Badge","props","Tag","attributes","classes","href","createElement","ref","defaultProps"],"mappings":"gyBAce,sBAAa,IAAXA,EAAU,EAAVA,KAETC,EAAOD,EAAKE,eACdC,EAAmBF,EAAKG,YAAYC,cAAcC,gBAAgBC,MAClEC,EAAYP,EAAKG,YAAYI,UAAUF,gBAAgBC,MAE3D,OACE,YAAC,IAAD,KACE,oBAAME,MAAO,CAAEC,UAAW,SAC1B,YAAC,SAAD,CAAQC,MAAK,gBAAkBV,EAAKG,YAAYO,QAG9C,mBAAKC,UAAU,OACb,mBAAKA,UAAU,aACf,mBAAKA,UAAU,2BACb,mBAAKA,UAAU,WACb,YAAC,IAAD,CAAKL,MAAOJ,EAAkBU,QAAQ,SACtC,mBAAKD,UAAU,oBACb,sBAAKX,EAAKG,YAAYO,OACtB,mBAAKC,UAAU,qBACb,mBAAKA,UAAU,iBACb,mBAAKE,IAAKN,EAAUM,IAAKC,IAAKd,EAAKG,YAAYY,OAAQJ,UAAU,iBAEnE,mBAAKA,UAAU,oBACb,oBAAMA,UAAU,iBAAiBX,EAAKG,YAAYY,QAClD,uBACE,oBAAMJ,UAAU,iBACbX,EAAKG,YAAYa,KADpB,MAC6BhB,EAAKiB,WADlC,gBAMN,mBAAKC,wBAAyB,CAAEC,OAAQnB,EAAKoB,WAInD,mBAAKT,UAAU,cAGjB,YAAC,IAAD,CAAYU,QAAQ,SAApB,oBAGA,mBAAKV,UAAU,iBAEf,YAAC,IAAD,CAAMW,WAAS,EAACC,QAAS,EAC3BC,IAAG,GAIAzB,EAAK0B,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAEhC,YAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EACrBC,IAAKJ,EAAKK,GACVT,IAAG,GAKH,mBAAKb,UAAU,qBACb,mBACEa,IAAG,GAMH,YAAC,IAAD,CAAKlB,MAAOsB,EAAKzB,YAAYC,cAAcC,gBAAgBC,MAC3DkB,IAAG,KAOL,mBACAA,IAAG,GAOD,YAAC,OAAD,CACEU,GAAIN,EAAKO,OAAOC,KAChBZ,IAAG,GAIH,YAAC,IAAD,CAAYH,QAAQ,QACpBG,IAAG,GAGAI,EAAKzB,YAAYO,OAEpB,YAAC,IAAD,CAAY2B,WAAS,EAAC7B,MAAO,CAAE8B,OAAQ,MACpCV,EAAKW,UAGV,mBAAK5B,UAAU,kBACb,YAAC,IAAD,CAAO6B,MAAM,WAAWZ,EAAKzB,YAAYsC,OAE3C,oBAAM9B,UAAU,iBACbiB,EAAKzB,YAAYa,KADpB,MAC6BY,EAAKX,WADlC,wBAgBT,IAAMyB,EAAK,a,iCCnIlB,8EAMIC,EAAY,CACdH,MAAO,IAAUI,OACjBC,KAAM,IAAUC,KAChBC,IAAK,IACLC,SAAU,IAAUC,UAAU,CAAC,IAAUC,OAAQ,IAAUC,KAAM,IAAUP,SAC3EQ,SAAU,IAAUxB,KACpBjB,UAAW,IAAUiC,OACrBS,UAAW,IAAUH,QAQnBI,EAAQ,SAAeC,GACzB,IAAI5C,EAAY4C,EAAM5C,UAClB0C,EAAYE,EAAMF,UAClBb,EAAQe,EAAMf,MACdQ,EAAWO,EAAMP,SACjBH,EAAOU,EAAMV,KACbW,EAAMD,EAAMR,IACZU,EAAa,YAA8BF,EAAO,CAAC,YAAa,YAAa,QAAS,WAAY,OAAQ,QAE1GG,EAAU,YAAgB,IAAW/C,EAAW,QAAS,SAAW6B,IAAOK,GAAO,cAAuBQ,GAM7G,OAJII,EAAWE,MAAgB,SAARH,IACrBA,EAAM,KAGD,IAAMI,cAAcJ,EAAK,YAAS,GAAIC,EAAY,CACvD9C,UAAW+C,EACXG,IAAKb,MAITM,EAAMX,UAAYA,EAClBW,EAAMQ,aA5Ba,CACjBtB,MAAO,YACPK,MAAM,EACNE,IAAK,QA0BQ","file":"component---src-templates-blog-post-js-3c8b4883b2eec9942412.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from 'gatsby'\nimport { css } from '@emotion/core'\nimport { Badge } from 'reactstrap';\nimport { Helmet } from \"react-helmet\"\nimport Img from 'gatsby-image'\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport Layout from \"../components/layout\"\n\nimport '../styles/global.css'\n\nexport default ({data}) => {\n\n  const post = data.markdownRemark\n  let featuredImgFluid = post.frontmatter.featuredImage.childImageSharp.fluid\n  let authorPic = post.frontmatter.authorPic.childImageSharp.fluid\n\n  return (\n    <Layout>\n      <main style={{ marginTop: '80px' }}>\n      <Helmet title={`MM Science | ${post.frontmatter.title}`} />\n\n      \n        <div className=\"row\">\n          <div className=\"col-md-2\"></div>\n          <div className=\"col-md-8 singal_content\">\n            <div className=\"article\">\n              <Img fluid={featuredImgFluid} loading=\"lazy\" />\n              <div className=\"article__content\">\n                <h2>{post.frontmatter.title}</h2>\n                <div className=\"article_role_play\">\n                  <div className=\"article_owner\">\n                    <img src={authorPic.src} alt={post.frontmatter.author} className=\"author__pic\"/>\n                  </div>\n                  <div className=\"article__profile\">\n                    <span className=\"article__name\">{post.frontmatter.author}</span>\n                    <div>\n                      <span className=\"article__meta\"> \n                        {post.frontmatter.date} · {post.timeToRead} min read \n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: post.html }} />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-2\"></div>\n        </div>\n\n        <Typography variant=\"body2\">\n          Awesome articles\n        </Typography>\n        <div className=\"other_stories\">\n\n        <Grid container spacing={3} \n      css={css`\n        padding-top: 10px;\n      `}>\n          \n        {data.allMarkdownRemark.edges.map(({ node }) => (\n            \n          <Grid item xs={12} sm={4} \n            key={node.id} \n            css={css`\n              @media screen and (max-width: 700px) {\n                padding: 0 !important;\n              }            \n          `}>\n            <div className=\"blog__post__items\">\n              <div \n                css={css`\n                  @media screen and (max-width: 700px) {\n                    padding: 10px;\n                  }\n                `}\n              >\n                <Img fluid={node.frontmatter.featuredImage.childImageSharp.fluid} \n                css={css`\n                  @media screen and (max-width: 700px) {\n                    box-shadow: none;\n                    border-radius: 20px;\n                  }\n                `}/>\n              </div>\n              <div \n              css={css`\n                padding: 1rem 1rem;\n                background: #fff;\n                @media screen and (max-width: 700px) {\n                  border-radius: 20px;\n                }\n              `}>\n                <Link\n                  to={node.fields.slug}\n                  css={css`\n                    text-decoration: none;\n                    color: inherit;\n                `}>\n                  <Typography variant=\"body2\" \n                  css={css`\n                    font-family: 'Rubik', 'Pyidaungsu', sans-serif;\n                  `}> \n                    {node.frontmatter.title}\n                  </Typography>\n                  <Typography paragraph style={{ margin: '0'}}>\n                    {node.excerpt}\n                  </Typography>\n                </Link>\n                <div className=\"article__label\"> \n                  <Badge color=\"success\">{node.frontmatter.tags}</Badge>  \n                </div>\n                <span className=\"article__meta\"> \n                  {node.frontmatter.date} · {node.timeToRead} min read \n                </span>\n              </div>\n            </div>\n          </Grid>\n          \n        ))}\n      </Grid>\n    \n        </div>\n      </main>\n    </Layout>\n  )\n}\n\nexport const query = graphql `\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        author\n        authorPic {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        tags\n        date(formatString: \"MMM DD\")\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n              src\n            }\n          }\n        }\n      }\n      timeToRead\n    }\n    allMarkdownRemark(limit: 3, sort: {order: DESC, fields: frontmatter___tags}) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMM, YYYY\")\n            tags\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n        }\n      }\n    }\n  }\n`\n\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  color: PropTypes.string,\n  pill: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\nexport default Badge;"],"sourceRoot":""}